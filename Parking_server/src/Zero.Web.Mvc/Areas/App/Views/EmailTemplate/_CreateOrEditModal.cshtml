@using Zero.Web.Areas.App.Models.Common.Modals
@using Zero.Customize
@model ZERO.Web.Areas.App.Models.EmailTemplate.CreateOrEditEmailTemplateModalViewModel

@await Html.PartialAsync("~/Areas/App/Views/Common/Modals/_ModalHeader.cshtml", new ModalHeaderViewModel(Model.IsEditMode ? (L("Edit")) : L("Create")))

<div class="modal-body">
    <div id="EmailTemplateInformationsTab">
        <form name="EmailTemplateInformationsForm" role="form" novalidate class="form-validation">

            @if (Model.IsEditMode)
            {
                <input type="hidden" name="id" value="@Model.EmailTemplate.Id"/>
            }
            <input type="hidden" name="language" id="Entity_Language" value=""/>

            <div class="row">
                <div class="col-8">
                    <div class="form-group">
                        <label>@L("Title") <span class="text-danger">*</span></label>
                        <input class="form-control" id="EmailTemplate_Title" value="@Model.EmailTemplate.Title" type="text" name="title"/>
                    </div>
                </div>
                <div class="col-4">
                        <div class="form-group">
                            <label>@L("EmailTemplateType")</label> <span class="text-danger">*</span>
                            @Html.DropDownList("emailTemplateType", SelectListHelper.ListWithNull(L("EmailTemplateType_Default"), Model.ListEmailTemplateType, Model.EmailTemplate.EmailTemplateType), new {@class = "form-control kt-select2-non-search"})
                        </div>
                    </div>
                
                <div class="col-12">
                    <div class="form-group">
                        <label>@L("Content") <span class="text-danger">*</span></label>
                        <textarea class="form-control" name="content" id="EmailTemplate_Content">
                            @Html.Raw(Model.EmailTemplate.Content)
                        </textarea>
                    </div>
                </div>
                
            </div>

            <div class="form-group">
                <label for="EmailTemplate_Note">@L("Note")</label>
                <input class="form-control" id="EmailTemplate_Note" type="text" name="note"/>
            </div>

            <div class="row mb-10">
                @if (!AbpSession.TenantId.HasValue)
                {
                    <div class="col-6">
                        <div class="form-group text-center mb-0">
                            <label>@L("AutoCreateForNewTenant")</label>
                            <div class="form-control no-border">
                                <label class="checkbox checkbox-outline checkbox-primary inline-block">
                                    <input type="checkbox" id="EmailTemplate_AutoCreateForNewTenant" name="autoCreateForNewTenant" value="true" @Html.Raw(!Model.EmailTemplate.AutoCreateForNewTenant ? "" : "checked=\"checked\"")>
                                    <span></span>
                                </label>
                            </div>
                        </div>
                    </div>
                }
                <div class="col-6">
                    <div class="form-group text-center mb-0">
                        <label>@L("IsActive")</label>
                        <div class="form-control no-border">
                            <label class="checkbox checkbox-outline checkbox-primary inline-block">
                                <input type="checkbox" id="EmailTemplate_IsActive" name="isActive" value="true" @Html.Raw(!Model.EmailTemplate.IsActive ? "" : "checked=\"checked\"")>
                                <span></span>
                            </label>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@await Html.PartialAsync("~/Areas/App/Views/Common/Modals/_ModalFooterWithSaveAndCancel.cshtml")