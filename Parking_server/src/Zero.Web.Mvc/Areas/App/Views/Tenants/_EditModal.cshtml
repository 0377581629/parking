@using Abp.Extensions
@using Abp.MultiTenancy
@using Zero.Customize
@using Zero.MultiTenancy
@using Zero.Web.Areas.App.Models.Common.Modals
@using Zero.Web.Areas.App.Models.Tenants
@model EditTenantViewModel

@await Html.PartialAsync("~/Areas/App/Views/Common/Modals/_ModalHeader.cshtml", new ModalHeaderViewModel(L("EditTenant") + ": " + Model.Tenant.TenancyName))

<div class="modal-body">
    <form name="TenantInformationsForm">
        <input type="hidden" name="Id" value="@Model.Tenant.Id"/>
        <input type="hidden" name="TenancyName" value="@Model.Tenant.TenancyName"/>

        <div class="row">
            <div class="col-6">
                <div class="form-group">
                    <label>@L("ParentTenant")</label>
                    @Html.DropDownList("ParentId", SelectListHelper.ListWithNull(L("NoneSelect"), Model.ListTenant, Model.Tenant.ParentId), new { @class = "form-control kt-select2" })
                </div>
            </div>
            <div class="col-6">
                <div class="form-group">
                    <label for="Name">@L("Name")</label>
                    <input id="Name" type="text" name="Name" value="@Model.Tenant.Name" class="form-control edited" required maxlength="@Tenant.MaxNameLength">
                </div>
            </div>
        </div>

        @if (!Model.Tenant.ConnectionString.IsNullOrEmpty())
        {
            <div class="form-group">
                <label for="ConnectionString">@L("DatabaseConnectionString")</label>
                <input id="ConnectionString" type="text" name="ConnectionString" class="form-control edited" value="@Model.Tenant.ConnectionString" required maxlength="@Tenant.MaxConnectionStringLength">
            </div>

            <div>
                <span class="alert alert-custom alert-notice alert-light-warning fade show mb-5">@L("TenantDatabaseConnectionStringChangeWarningMessage")</span>
            </div>
        }

        <div class="form-group">
            <label for="EditionId">@L("Edition")</label>
            <select class="form-control kt-select2-non-search" id="EditionId" name="EditionId">
                @foreach (var edition in Model.EditionItems)
                {
                    <option value="@edition.Value" data-isfree="@edition.IsFree" selected="@edition.IsSelected">@edition.DisplayText</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label>@L("Domain")</label>
            <input id="Domain" type="text" name="domain" class="form-control" value="@Model.Tenant.Domain">
            <span class="text-danger text-italic">@L("TenancyDomainWarning")</span>
        </div>
        
        <div class="checkbox-list subscription-component mb-5px">
            <label class="checkbox checkbox-outline">
                <input id="CreateTenant_IsUnlimited" type="checkbox" name="IsUnlimited" value="true" @(!Model.Tenant.SubscriptionEndDateUtc.HasValue ? "checked=\"checked\"" : "")/>
                <span></span>
                @L("UnlimitedTimeSubscription")
            </label>
        </div>

        <div class="form-group">
            <label for="SubscriptionEndDateUtc">@L("SubscriptionEndDateUtc")</label>
            <input id="SubscriptionEndDateUtc" type="datetime" name="SubscriptionEndDateUtc" value="@(Model.Tenant.SubscriptionEndDateUtc)" class="form-control edited date-time-picker" @(!Model.Tenant.SubscriptionEndDateUtc.HasValue ? "required" : "")>
        </div>

        <div class="checkbox-list subscription-component mb-5px">
            <label class="checkbox checkbox-outline">
                <input id="EditTenant_IsInTrialPeriod" type="checkbox" name="IsInTrialPeriod" value="true" @(Model.Tenant.IsInTrialPeriod ? "checked=\"checked\"" : "")/>
                <span></span>
                @L("IsInTrialPeriod")
            </label>
        </div>

        <div class="checkbox-list">
            <label class="checkbox checkbox-outline">
                <input id="EditTenant_IsActive" type="checkbox" name="IsActive" value="true" @Html.Raw(Model.Tenant.IsActive ? "checked=\"checked\"" : "")>
                <span></span>
                @L("Active")
            </label>
        </div>
    </form>
</div>

@await Html.PartialAsync("~/Areas/App/Views/Common/Modals/_ModalFooterWithSaveAndCancel.cshtml")